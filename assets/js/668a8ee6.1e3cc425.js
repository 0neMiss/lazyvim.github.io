"use strict";(self.webpackChunklazyvim=self.webpackChunklazyvim||[]).push([[513],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>f});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),u=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=u(e.components);return r.createElement(s.Provider,{value:n},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=u(t),m=a,f=d["".concat(s,".").concat(m)]||d[m]||p[m]||l;return t?r.createElement(f,o(o({ref:n},c),{},{components:t})):r.createElement(f,o({ref:n},c))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=t.length,o=new Array(l);o[0]=m;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i[d]="string"==typeof e?e:a,o[1]=i;for(var u=2;u<l;u++)o[u]=t[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},5162:(e,n,t)=>{t.d(n,{Z:()=>o});var r=t(7294),a=t(6010);const l="tabItem_Ymn6";function o(e){let{children:n,hidden:t,className:o}=e;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(l,o),hidden:t},n)}},4866:(e,n,t)=>{t.d(n,{Z:()=>x});var r=t(7462),a=t(7294),l=t(6010),o=t(2466),i=t(6550),s=t(1980),u=t(7392),c=t(12);function d(e){return function(e){return a.Children.map(e,(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:n,label:t,attributes:r,default:a}}=e;return{value:n,label:t,attributes:r,default:a}}))}function p(e){const{values:n,children:t}=e;return(0,a.useMemo)((()=>{const e=n??d(t);return function(e){const n=(0,u.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function m(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function f(e){let{queryString:n=!1,groupId:t}=e;const r=(0,i.k6)(),l=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,s._X)(l),(0,a.useCallback)((e=>{if(!l)return;const n=new URLSearchParams(r.location.search);n.set(l,e),r.replace({...r.location,search:n.toString()})}),[l,r])]}function b(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,l=p(e),[o,i]=(0,a.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!m({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const r=t.find((e=>e.default))??t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:l}))),[s,u]=f({queryString:t,groupId:r}),[d,b]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[r,l]=(0,c.Nk)(t);return[r,(0,a.useCallback)((e=>{t&&l.set(e)}),[t,l])]}({groupId:r}),y=(()=>{const e=s??d;return m({value:e,tabValues:l})?e:null})();(0,a.useLayoutEffect)((()=>{y&&i(y)}),[y]);return{selectedValue:o,selectValue:(0,a.useCallback)((e=>{if(!m({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);i(e),u(e),b(e)}),[u,b,l]),tabValues:l}}var y=t(2389);const g="tabList__CuJ",v="tabItem_LNqP";function h(e){let{className:n,block:t,selectedValue:i,selectValue:s,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:d}=(0,o.o5)(),p=e=>{const n=e.currentTarget,t=c.indexOf(n),r=u[t].value;r!==i&&(d(n),s(r))},m=e=>{let n=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const t=c.indexOf(e.currentTarget)+1;n=c[t]??c[0];break}case"ArrowLeft":{const t=c.indexOf(e.currentTarget)-1;n=c[t]??c[c.length-1];break}}n?.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":t},n)},u.map((e=>{let{value:n,label:t,attributes:o}=e;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:i===n?0:-1,"aria-selected":i===n,key:n,ref:e=>c.push(e),onKeyDown:m,onClick:p},o,{className:(0,l.Z)("tabs__item",v,o?.className,{"tabs__item--active":i===n})}),t??n)})))}function k(e){let{lazy:n,children:t,selectedValue:r}=e;const l=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=l.find((e=>e.props.value===r));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},l.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==r}))))}function _(e){const n=b(e);return a.createElement("div",{className:(0,l.Z)("tabs-container",g)},a.createElement(h,(0,r.Z)({},e,n)),a.createElement(k,(0,r.Z)({},e,n)))}function x(e){const n=(0,y.Z)();return a.createElement(_,(0,r.Z)({key:String(n)},e))}},5877:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>i,metadata:()=>u,toc:()=>d});var r=t(7462),a=(t(7294),t(3905)),l=t(4866),o=t(5162);const i={},s="editor.aerial",u={unversionedId:"extras/editor/aerial",id:"extras/editor/aerial",title:"editor.aerial",description:"To use this, add it to your lazy.nvim imports:",source:"@site/docs/extras/editor/aerial.md",sourceDirName:"extras/editor",slug:"/extras/editor/aerial",permalink:"/extras/editor/aerial",draft:!1,editUrl:"https://github.com/LazyVim/lazyvim.github.io/tree/master/docs/extras/editor/aerial.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"DAP Neovim Lua Adapter",permalink:"/extras/dap/nlua"},next:{title:"editor.leap",permalink:"/extras/editor/leap"}},c={},d=[{value:"aerial.nvim",id:"aerialnvim",level:2},{value:"telescope.nvim",id:"telescopenvim",level:2},{value:"edgy.nvim",id:"edgynvim",level:2},{value:"lualine.nvim",id:"lualinenvim",level:2}],p={toc:d};function m(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"editoraerial"},(0,a.kt)("inlineCode",{parentName:"h1"},"editor.aerial")),(0,a.kt)("p",null,"To use this, add it to your ",(0,a.kt)("strong",{parentName:"p"},"lazy.nvim")," imports:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="lua/config/lazy.lua" {4}',title:'"lua/config/lazy.lua"',"{4}":!0},'require("lazy").setup({\n  spec = {\n    { "LazyVim/LazyVim", import = "lazyvim.plugins" },\n    { import = "lazyvim.plugins.extras.editor.aerial" },\n    { import = "plugins" },\n  },\n})\n')),(0,a.kt)("h2",{id:"aerialnvim"},(0,a.kt)("a",{parentName:"h2",href:"https://github.com/stevearc/aerial.nvim"},"aerial.nvim")),(0,a.kt)(l.Z,{mdxType:"Tabs"},(0,a.kt)(o.Z,{value:"opts",label:"Options",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'opts = function()\n  local icons = vim.deepcopy(Config.icons.kinds)\n\n  -- HACK: fix lua\'s weird choice for `Package` for control\n  -- structures like if/else/for/etc.\n  icons.lua = { Package = icons.Control }\n\n  ---@type table<string, string[]>|false\n  local filter_kind = false\n  if Config.kind_filter then\n    filter_kind = assert(vim.deepcopy(Config.kind_filter))\n    filter_kind._ = filter_kind.default\n    filter_kind.default = nil\n  end\n\n  local opts = {\n    attach_mode = "global",\n    backends = { "lsp", "treesitter", "markdown", "man" },\n    show_guides = true,\n    layout = {\n      resize_to_content = false,\n      win_opts = {\n        winhl = "Normal:NormalFloat,FloatBorder:NormalFloat,SignColumn:SignColumnSB",\n        signcolumn = "yes",\n        statuscolumn = " ",\n      },\n    },\n    icons = icons,\n    filter_kind = filter_kind,\n    -- stylua: ignore\n    guides = {\n      mid_item   = "\u251c\u2574",\n      last_item  = "\u2514\u2574",\n      nested_top = "\u2502 ",\n      whitespace = "  ",\n    },\n  }\n  return opts\nend\n'))),(0,a.kt)(o.Z,{value:"code",label:"Full Spec",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'{\n  "stevearc/aerial.nvim",\n  event = "LazyFile",\n  opts = function()\n    local icons = vim.deepcopy(Config.icons.kinds)\n\n    -- HACK: fix lua\'s weird choice for `Package` for control\n    -- structures like if/else/for/etc.\n    icons.lua = { Package = icons.Control }\n\n    ---@type table<string, string[]>|false\n    local filter_kind = false\n    if Config.kind_filter then\n      filter_kind = assert(vim.deepcopy(Config.kind_filter))\n      filter_kind._ = filter_kind.default\n      filter_kind.default = nil\n    end\n\n    local opts = {\n      attach_mode = "global",\n      backends = { "lsp", "treesitter", "markdown", "man" },\n      show_guides = true,\n      layout = {\n        resize_to_content = false,\n        win_opts = {\n          winhl = "Normal:NormalFloat,FloatBorder:NormalFloat,SignColumn:SignColumnSB",\n          signcolumn = "yes",\n          statuscolumn = " ",\n        },\n      },\n      icons = icons,\n      filter_kind = filter_kind,\n      -- stylua: ignore\n      guides = {\n        mid_item   = "\u251c\u2574",\n        last_item  = "\u2514\u2574",\n        nested_top = "\u2502 ",\n        whitespace = "  ",\n      },\n    }\n    return opts\n  end,\n  keys = {\n    { "<leader>cs", "<cmd>AerialToggle<cr>", desc = "Aerial (Symbols)" },\n  },\n}\n')))),(0,a.kt)("h2",{id:"telescopenvim"},(0,a.kt)("a",{parentName:"h2",href:"https://github.com/nvim-telescope/telescope.nvim"},"telescope.nvim")),(0,a.kt)("p",null," Telescope integration"),(0,a.kt)(l.Z,{mdxType:"Tabs"},(0,a.kt)(o.Z,{value:"opts",label:"Options",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'opts = function()\n  Util.on_load("telescope.nvim", function()\n    require("telescope").load_extension("aerial")\n  end)\nend\n'))),(0,a.kt)(o.Z,{value:"code",label:"Full Spec",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'{\n  "nvim-telescope/telescope.nvim",\n  optional = true,\n  opts = function()\n    Util.on_load("telescope.nvim", function()\n      require("telescope").load_extension("aerial")\n    end)\n  end,\n  keys = {\n    {\n      "<leader>ss",\n      "<cmd>Telescope aerial<cr>",\n      desc = "Goto Symbol (Aerial)",\n    },\n  },\n}\n')))),(0,a.kt)("h2",{id:"edgynvim"},(0,a.kt)("a",{parentName:"h2",href:"https://github.com/folke/edgy.nvim"},"edgy.nvim")),(0,a.kt)("p",null," edgy integration"),(0,a.kt)(l.Z,{mdxType:"Tabs"},(0,a.kt)(o.Z,{value:"opts",label:"Options",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'opts = function(_, opts)\n  local edgy_idx = Util.plugin.extra_idx("ui.edgy")\n  local aerial_idx = Util.plugin.extra_idx("editor.aerial")\n\n  if edgy_idx and edgy_idx > aerial_idx then\n    Util.warn("The `edgy.nvim` extra must be **imported** before the `aerial.nvim` extra to work properly.", {\n      title = "LazyVim",\n    })\n  end\n\n  opts.right = opts.right or {}\n  table.insert(opts.right, {\n    title = "Aerial",\n    ft = "aerial",\n    pinned = true,\n    open = "AerialOpen",\n  })\nend\n'))),(0,a.kt)(o.Z,{value:"code",label:"Full Spec",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'{\n  "folke/edgy.nvim",\n  optional = true,\n  opts = function(_, opts)\n    local edgy_idx = Util.plugin.extra_idx("ui.edgy")\n    local aerial_idx = Util.plugin.extra_idx("editor.aerial")\n\n    if edgy_idx and edgy_idx > aerial_idx then\n      Util.warn("The `edgy.nvim` extra must be **imported** before the `aerial.nvim` extra to work properly.", {\n        title = "LazyVim",\n      })\n    end\n\n    opts.right = opts.right or {}\n    table.insert(opts.right, {\n      title = "Aerial",\n      ft = "aerial",\n      pinned = true,\n      open = "AerialOpen",\n    })\n  end,\n}\n')))),(0,a.kt)("h2",{id:"lualinenvim"},(0,a.kt)("a",{parentName:"h2",href:"https://github.com/nvim-lualine/lualine.nvim"},"lualine.nvim")),(0,a.kt)("p",null," lualine integration"),(0,a.kt)(l.Z,{mdxType:"Tabs"},(0,a.kt)(o.Z,{value:"opts",label:"Options",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'opts = function(_, opts)\n  table.insert(opts.sections.lualine_c, {\n    "aerial",\n    sep = " ", -- separator between symbols\n    sep_icon = "", -- separator between icon and symbol\n\n    -- The number of symbols to render top-down. In order to render only \'N\' last\n    -- symbols, negative numbers may be supplied. For instance, \'depth = -1\' can\n    -- be used in order to render only current symbol.\n    depth = 5,\n\n    -- When \'dense\' mode is on, icons are not rendered near their symbols. Only\n    -- a single icon that represents the kind of current symbol is rendered at\n    -- the beginning of status line.\n    dense = false,\n\n    -- The separator to be used to separate symbols in dense mode.\n    dense_sep = ".",\n\n    -- Color the symbol icons.\n    colored = true,\n  })\nend\n'))),(0,a.kt)(o.Z,{value:"code",label:"Full Spec",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'{\n  "nvim-lualine/lualine.nvim",\n  optional = true,\n  opts = function(_, opts)\n    table.insert(opts.sections.lualine_c, {\n      "aerial",\n      sep = " ", -- separator between symbols\n      sep_icon = "", -- separator between icon and symbol\n\n      -- The number of symbols to render top-down. In order to render only \'N\' last\n      -- symbols, negative numbers may be supplied. For instance, \'depth = -1\' can\n      -- be used in order to render only current symbol.\n      depth = 5,\n\n      -- When \'dense\' mode is on, icons are not rendered near their symbols. Only\n      -- a single icon that represents the kind of current symbol is rendered at\n      -- the beginning of status line.\n      dense = false,\n\n      -- The separator to be used to separate symbols in dense mode.\n      dense_sep = ".",\n\n      -- Color the symbol icons.\n      colored = true,\n    })\n  end,\n}\n')))))}m.isMDXComponent=!0}}]);